import pytest

from prodadvert.domain.moderation import TextModerator, enrich_blacklist, _REPLACEMENTS


@pytest.mark.parametrize(
    ("text", "blacklist"),
    [
        ("–ø–ª–æ—Ö–æ–µ —Å–ª–æ–≤–æ", ["–ø–ª–æ—Ö–æ–µ"]),
        ("–ø–ªo—Öo–µ —Å–ª–æ–≤–æ", ["–ø–ª–æ—Ö–æ–µ"]),  # eng o
        ("–ø–ªùê®—Öùê®–µ —Å–ª–æ–≤–æ", ["–ø–ª–æ—Ö–æ–µ"]),
        ("–ø–ª0—Ö0–µ —Å–ª–æ–≤–æ", ["–ø–ª–æ—Ö–æ–µ"]),
        ("–ø-–ª-–æ-—Ö-–æ-–µ —Å–ª–æ–≤–æ", ["–ø–ª–æ—Ö–æ–µ"]),
        ("BAD WORD", ["BAD"]),
        ("BùìêD WORD", ["BAD"]),
        ("B–êD WORD", ["BAD"]),  # rus A
        ("B4D WORD", ["BAD"]),
    ]
)
def test_has_profanity(text, blacklist):
    blacklist = enrich_blacklist(blacklist)
    moderator = TextModerator(blacklist)
    result = moderator.moderate(text)
    assert not result.is_ok


@pytest.mark.parametrize(
    ("text", "blacklist"),
    [
        ("–Ω–µ–ø–ª–æ—Ö–æ", ["–ø–ª–æ—Ö–æ"]),
        ("badlands", ["bad"]),
    ]
)
def test_no_false_positives(text, blacklist):
    blacklist = enrich_blacklist(blacklist)
    moderator = TextModerator(blacklist)
    result = moderator.moderate(text)
    assert result.is_ok
